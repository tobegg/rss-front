/* tslint:disable */
/* eslint-disable */
/**
 * Rss-back
 * Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface SearchPostDto
 */
export interface SearchPostDto {
  /**
   * Search value
   * @type {string}
   * @memberof SearchPostDto
   */
  search: string;
  /**
   * Category
   * @type {string}
   * @memberof SearchPostDto
   */
  filter: string;
  /**
   * Page value
   * @type {number}
   * @memberof SearchPostDto
   */
  page: number;
  /**
   * Limit value
   * @type {number}
   * @memberof SearchPostDto
   */
  limit: number;
}

/**
 * Check if a given object implements the SearchPostDto interface.
 */
export function instanceOfSearchPostDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "search" in value;
  isInstance = isInstance && "filter" in value;
  isInstance = isInstance && "page" in value;
  isInstance = isInstance && "limit" in value;

  return isInstance;
}

export function SearchPostDtoFromJSON(json: any): SearchPostDto {
  return SearchPostDtoFromJSONTyped(json, false);
}

export function SearchPostDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): SearchPostDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    search: json["search"],
    filter: json["filter"],
    page: json["page"],
    limit: json["limit"],
  };
}

export function SearchPostDtoToJSON(value?: SearchPostDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    search: value.search,
    filter: value.filter,
    page: value.page,
    limit: value.limit,
  };
}
