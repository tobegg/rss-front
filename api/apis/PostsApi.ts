/* tslint:disable */
/* eslint-disable */
/**
 * Rss-back
 * Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { CreatePostDto, Post } from "../models";
import {
  CreatePostDtoFromJSON,
  CreatePostDtoToJSON,
  PostFromJSON,
  PostToJSON,
} from "../models";

export interface PostsControllerCreateRequest {
  createPostDto: CreatePostDto;
}

/**
 *
 */
export class PostsApi extends runtime.BaseAPI {
  /**
   * Post creation
   */
  async postsControllerCreateRaw(
    requestParameters: PostsControllerCreateRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<Post>> {
    if (
      requestParameters.createPostDto === null ||
      requestParameters.createPostDto === undefined
    ) {
      throw new runtime.RequiredError(
        "createPostDto",
        "Required parameter requestParameters.createPostDto was null or undefined when calling postsControllerCreate."
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    const response = await this.request(
      {
        path: `/posts`,
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
        body: CreatePostDtoToJSON(requestParameters.createPostDto),
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      PostFromJSON(jsonValue)
    );
  }

  /**
   * Post creation
   */
  async postsControllerCreate(
    requestParameters: PostsControllerCreateRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<Post> {
    const response = await this.postsControllerCreateRaw(
      requestParameters,
      initOverrides
    );
    return await response.value();
  }

  /**
   * All Posts getting
   */
  async postsControllerFindAllRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<Array<Post>>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/posts`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      jsonValue.map(PostFromJSON)
    );
  }

  /**
   * All Posts getting
   */
  async postsControllerFindAll(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<Array<Post>> {
    const response = await this.postsControllerFindAllRaw(initOverrides);
    return await response.value();
  }
}
